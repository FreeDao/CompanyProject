package com.zgan.yckz.activity;

import java.io.IOException;
import java.nio.channels.Selector;

import com.zgan.yckz.R;
import com.zgan.yckz.tcp.Frame;
import com.zgan.yckz.tcp.FrameTools;
import com.zgan.yckz.tcp.TCPThread;
import com.zgan.yckz.tools.YCKZ_Activity;
import com.zgan.yckz.tools.YCKZ_NetworkDetector;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.SharedPreferences;
import android.net.Uri;
import android.os.Bundle;
import android.os.Looper;
import android.util.Log;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

public class User_Login extends YCKZ_Activity {
	/**
	 * 手机号
	 */
	EditText go_tel;
	/**
	 * 密码
	 */
	EditText go_pass;
	/**
	 * 登陆
	 */
	ImageView go;
	/**
	 * 注册
	 */
	ImageView reg;
	/**
	 * 一键找回密码
	 */
	ImageView call_KF;

	SharedPreferences preferences;
	SharedPreferences.Editor editor;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.user_login);
		preferences = getSharedPreferences("yckz_user", MODE_PRIVATE);
		editor = preferences.edit();

		go_tel = (EditText) findViewById(R.id.go_tel);
		go_pass = (EditText) findViewById(R.id.go_pas);

		go = (ImageView) findViewById(R.id.go);
		reg = (ImageView) findViewById(R.id.reg);
		call_KF = (ImageView) findViewById(R.id.callke);

		go.setOnClickListener(listener);
		reg.setOnClickListener(listener);
		call_KF.setOnClickListener(listener);
		Detectnetwork();

	}

	OnClickListener listener = new OnClickListener() {

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			switch (v.getId()) {
			case R.id.go:
				if (go_tel.getText() != null && go_pass.getText() != null
						&& !"".equals(go_tel.getText().toString())
						&& !"".equals(go_pass.getText().toString())) {
					Log.i("登陆中", "登陆中");
					Selector s1 = null;

					try {
						s1 = Selector.open();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}

					testSendData test = new testSendData();

					testGetData testg = new testGetData();

				} else {
					Toast.makeText(User_Login.this, "用户名或密码不能为空",
							Toast.LENGTH_SHORT).show();

				}

				break;

			case R.id.reg:
				Intent intent = new Intent(User_Login.this, User_Reg.class);
				startActivity(intent);
				break;
			case R.id.callke:
				Intent intent2 = new Intent(Intent.ACTION_CALL,
						Uri.parse("tel:" + "10086"));
				startActivity(intent2);
				break;
			}
		}
	};

	class testGetData implements Runnable {
		public testGetData() {
			new Thread(this).start();
		}

		@Override
		public void run() {
			// TODO Auto-generated method stub
			while (true) {
				if (FrameTools.Queue_Receive.size() > 0) {
					byte[] resultByte = null;

					resultByte = FrameTools.Queue_Receive.poll();

					Frame f = new Frame(resultByte);

					Log.i("TCPClient", "接收数据...");
					Log.i("TCPClient",
							"接收数据...平台代码" + Integer.toString(f.Platform));
					Log.i("TCPClient",
							"接收数据...版本号" + Integer.toString(f.Version));
					Log.i("TCPClient",
							"接收数据...主功能命令字" + Byte.toString(f.MainCmd));
					Log.i("TCPClient",
							"接收数据...子功能命令字" + Integer.toString(f.SubCmd));
					Log.i("TCPClient", "接收数据...数据" + f.strData);
					Looper.prepare();

					if (f.Platform == 1 && f.strData.length() > 0) {

						if (!"1".equals(f.strData.substring(0, 1))
								&& f.strData.substring(0, 1) != "1"
								) {
							Log.i("xxxxxxxxxxxxx", "xxxxxxxxxxxxxx");
							editor.putString("user_name", go_tel.getText()
									.toString());
							editor.putString("user_pas", go_pass.getText()
									.toString());
							editor.commit();

							Intent intent = new Intent(User_Login.this,
									Main_Acitivty.class);
							startActivity(intent);
							finish();
							String str = f.strData.substring(1);
							Log.i("(f.strData).substring(2)", "" + str);
							String Port[] = str.split("-");
							if (Port.length > 1) {

								for (int i = 0; i < Port.length; i++) {

									Log.i("Port[" + i + "]", "" + Port[i]);
									String[] data = Port[i].split(":");
									for (int j = 0; j < data.length; j++) {
										Log.i("data[" + j + "]", "" + data[j]);
									}

								}

							}

						} else {
							Toast.makeText(User_Login.this,
									f.strData.substring(1), Toast.LENGTH_SHORT)
									.show();

						}

					}
					Looper.loop();
				}
			}
		}
	}

	class testSendData implements Runnable {
		public testSendData() {
			new Thread(this).start();
		}

		@Override
		public void run() {
			// TODO Auto-generated method stub

			Frame f = new Frame();
			// 家庭卫士主14子 21
			// 远程控制平台代码4主3子0
			// 登陆服务器平台代码3主1子1.密码userid\t密码
			f.Platform = 4;
			f.MainCmd = 0x01;
			f.SubCmd = 1;
			f.strData = go_tel.getText().toString() + "\t"
					+ go_pass.getText().toString();

			TCPThread tt = new TCPThread(User_Login.this, "61.186.245.251",
					21000, FrameTools.getFrameBuffData(f));

			// FrameTools.toSendTcpData(f);
			Log.i("testSendData", "发送登录");

		}

	}

	/**
	 * 检测网络是否可用
	 */
	protected void Detectnetwork() {
		// TODO Auto-generated method stub
		Boolean networkState = YCKZ_NetworkDetector.detect(User_Login.this);

		if (!networkState) {
			new AlertDialog.Builder(this)
					.setTitle("网络错误")
					.setMessage("网络连接失败，请确认网络连接")
					.setPositiveButton(
							"确定",
							new android.content.DialogInterface.OnClickListener() {
								@Override
								public void onClick(DialogInterface arg0,
										int arg1) {
									// TODO Auto-generated method stub
									arg0.dismiss();
								}
							}).show();
		}
	}
}
