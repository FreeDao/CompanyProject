package com.hiibox.houseshelter.net;

import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.SelectionKey;
import java.nio.channels.Selector;
import java.nio.channels.SocketChannel;
import java.util.LinkedList;
import java.util.Queue;

//import android.util.Log;

public class TCPSend /*implements Runnable*/ {
	private SocketChannel socketChannel;
	private Queue<byte[]> send_Queue = new LinkedList<byte[]>();
	//FrameTools ft = new FrameTools();
	public TCPSend(String strServerIP, int intPort, Selector _selector,
			Queue<byte[]> _queue) {

		this.send_Queue = _queue;

		try {
			// 打开监听信道并设置为非阻塞模式
			socketChannel = SocketChannel.open(new InetSocketAddress(
					strServerIP, intPort));
			socketChannel.configureBlocking(false);

			// 打开并注册选择器到信道
			socketChannel.register(_selector, SelectionKey.OP_READ);

		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		// 启动接收线程
		//TCPReceive tr = new TCPReceive(_selector, _rqueue);
		//TCPPing tp = new TCPPing(ft);
	}

	public synchronized int send() {
		if (send_Queue.size() > 0) {
			byte[] sendByte = null;

			sendByte = send_Queue.poll();

			ByteBuffer writeBuffer = ByteBuffer.wrap(sendByte);

			try {
				
				
				socketChannel.write(writeBuffer);

			} catch (IOException e) {
				
				e.printStackTrace();
				return -1;
			}
			return 1;
		}
		return 0;
	}
	
}
