package com.hiibox.houseshelter.util;

import java.io.File;
import java.io.IOException;

import android.os.Environment;

import com.hiibox.houseshelter.core.GlobalUtil;

/**
 * @Description 
 * @Author wangjiang
 * @Create Date 2013-11-1 上午10:28:37
 * @Modified By 
 * @Modified Date 
 * @Modified Description 
 */
public class FileUtil {

    public static File updateDir = null;
    public static File updateFile = null;
    
    /**
     * 检查sd卡是否挂载
     * @return true:挂载, false:卸载或不存在
     */
    public static boolean isSdCardMounted() {
        if (Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED)) {
            return true;
        }
        return false;
    }

    /**
     * 创建文件
     * 
     * @param name 文件夹名称
     */
    public static void createFile(String name) {
        if (android.os.Environment.MEDIA_MOUNTED.equals(android.os.Environment
                .getExternalStorageState())) {
            updateDir = new File(GlobalUtil.GLOBAL_PATH + "/apk/");
            updateFile = new File(updateDir + "/" + name + ".apk");

            if (!updateDir.exists()) {
                updateDir.mkdirs();
            }
            if (!updateFile.exists()) {
                try {
                    updateFile.createNewFile();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        }
    }

    /**
     * 删除文件夹
     * 
     * @param folderPath 文件夹完整绝对路径
     */
    public static boolean delFolder(String folderPath) {
        boolean isDelete = false;
        try {
            if (delAllFile(folderPath)) { // 删除完里面所有内容
                String filePath = folderPath;
                filePath = filePath.toString();
                File myFilePath = new File(filePath);
                myFilePath.delete(); // 删除空文件夹
                isDelete = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return isDelete;
    }

    /**
     * 删除指定文件夹下所有文件
     * @param path 文件夹完整绝对路径
     * @return
     */
    public static boolean delAllFile(String path) {
        boolean flag = false;
        File file = new File(path);
        if (!file.exists()) {
            return flag;
        }
        if (!file.isDirectory()) {
            return flag;
        }
        String[] tempList = file.list();
        File temp = null;
        for (int i = 0; i < tempList.length; i++) {
            if (path.endsWith(File.separator)) {
                temp = new File(path + tempList[i]);
            } else {
                temp = new File(path + File.separator + tempList[i]);
            }
            if (temp.isFile()) {
                temp.delete();
            }
            if (temp.isDirectory()) {
                delAllFile(path + "/" + tempList[i]);// 先删除文件夹里面的文件
                delFolder(path + "/" + tempList[i]);// 再删除空文件夹
                flag = true;
            }
        }
        return flag;
    }
    
    public static String DecToHex(int dec) {
    	String str = Integer.toHexString(dec);
    	/*StringBuffer buff = new StringBuffer();
    	for (int i = str.length(); i > 0; i -= 2) {
    		buff.append(str.substring(i - 2, i));
    	}*/
    	return str;
    }
    
}
