package com.hiibox.houseshelter.util;

import java.net.InetAddress;
import java.net.NetworkInterface;
import java.net.SocketException;
import java.util.Enumeration;

import net.tsz.afinal.http.AjaxCallBack;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.text.TextUtils;
import android.util.Log;

import com.hiibox.houseshelter.R;
import com.tencent.tauth.IUiListener;
import com.tencent.tauth.Tencent;
import com.tencent.tauth.UiError;

/**
 * 腾讯微博工具类
 * 
 * @author ganhx
 * 
 */
public class TencentWeiboUtil {

	private static final String TAG = "TencentWeiboUtil";

	private static Activity mActivity;

	private static Context mContext;

	private static TencentWeiboUtil tencentWeiboUtil;

	/** 微博相关API **/
	private static TencentWeiboAPI weiboAPI;

	/** 保存token等参数 **/
	private static TencentTO tencentTO;

	private WeiboListener listener;

	private Tencent mTencent;

	private Handler mHandler = new Handler();
	
//	private String lon = "";
//    private String lat = "";

	public TencentWeiboUtil() {
		tencentTO = new TencentTO();
//		Location location = LocationUtil.getCurrentLocation(mContext);
//        if (location != null) {
//            lon = location.getLongitude() + "";
//            lat = location.getLatitude() + "";
//        }
	}

	public static TencentWeiboUtil getInstance(Activity activity) {
		mActivity = activity;
		mContext = activity.getApplicationContext();
		if (tencentWeiboUtil == null) {
			tencentWeiboUtil = new TencentWeiboUtil();
		}
		return tencentWeiboUtil;
	}

	/**
	 * 网页授权回调函数
	 */
	public void webAuthOnResult() {
		Log.i(TAG, "webAuthOnResult()    listener = " + listener);
		if (listener != null) {
			listener.onResult();
		}
	}

	/**
	 * 授权回调函数
	 */
	public void authOnResult(int requestCode, int resultCode, Intent data) {
		Log.i(TAG, "authOnResult()    listener = " + listener);
		mTencent.onActivityResult(requestCode, resultCode, data);
	}

	/**
	 * 初始化腾讯微博 ,检查是否已授权
	 * 
	 * @param l
	 *            授权是否过期回调函数
	 */
	public boolean isAuth() {
	    Log.i(TAG, "isAuth() ~~~~~~~~~~~~~~~~~~~~~~~~~~");
		String accessToken = PreferenceUtil.getInstance(mContext).getString(
				ShareUtil.PREF_TX_ACCESS_TOKEN, "");
		if (TextUtils.isEmpty(accessToken)) { // 未授权
			return false;
		} else {
			long expiresTime = Long.parseLong(PreferenceUtil.getInstance(
					mContext).getString(ShareUtil.PREF_TX_EXPIRES_TIME, "0"));
			Log.i(TAG, "expiresTime = " + expiresTime+" ; currentTimeMillis = " + System.currentTimeMillis() + 
			            " ; expiresTime - System.currentTimeMillis() = " + (expiresTime - System.currentTimeMillis()));
			if (expiresTime - System.currentTimeMillis() > 0) { // 已授权未过期
				String openId = PreferenceUtil.getInstance(mContext).getString(ShareUtil.PREF_TX_OPEN_ID, "");
				String clientIp = PreferenceUtil.getInstance(mContext).getString(ShareUtil.PREF_TX_CLIENT_IP, "");
				tencentTO.setAccessToken(accessToken);
				tencentTO.setOpenId(openId);
				tencentTO.setAppkey(ShareUtil.QQ_API_ID);
				tencentTO.setClientIp(clientIp);
				return true;
			} else { // 已过期
				return false;
			}
		}
	}

	/**
	 * SSO授权
	 * 
	 * @param appId
	 * @param appSecket
	 * @param l
	 */
	public void auth(WeiboListener l) {
	    Log.i(TAG, "auth() ~~~~~~~~~~~~~~~~~~~~~~~~~~");
		mTencent = Tencent.createInstance(ShareUtil.QQ_API_ID, mContext);
		IUiListener iuilistener = new BaseUiListener();
		mTencent.login(mActivity, ShareUtil.QQ_SCOPE, iuilistener);
		if (l == null) {
			listener = new WeiboListener();
		} else {
			listener = l;
		}
		// test 网页授权
		// Intent intent=new Intent(mContext, TencentWebAuthActivity.class);
		// ((Activity)mContext).startActivityForResult(intent, 1);
	}
	
	/**
     * SSO授权
     * 
     * @param l
     * @param content 分享的内容
     */
//    public void auth(WeiboListener l, String picUrl) {
//        mTencent = Tencent.createInstance(ShareUtil.QQ_API_ID, mContext);
//        IUiListener iuilistener = new BaseUiListener(picUrl);
//        mTencent.login(mActivity, ShareUtil.QQ_SCOPE, iuilistener);
//        if (l == null) {
//            listener = new WeiboListener();
//        } else {
//            listener = l;
//        }
//        // test 网页授权
//        // Intent intent=new Intent(mContext, TencentWebAuthActivity.class);
//        // ((Activity)mContext).startActivityForResult(intent, 1);
//    }


	private class BaseUiListener implements IUiListener {

//        private String picUrl = null;
        
        public BaseUiListener() {
            super();
        }
//        public BaseUiListener(String picUrl) {
//            super();
//            this.picUrl = picUrl;
//        }
        
		@Override
		public void onComplete(JSONObject response) {
			doComplete(response);
		}

		protected void doComplete(JSONObject values) {
//		    if (StringUtil.isNotEmpty(picUrl)) {
////                addWeibo("", picUrl, lon, lat, 1, 0);
//                addPicUrl("", picUrl, lon, lat, 1, 0);
//                Log.i(TAG, "BaseUiListener.class  doComplete() send weibo with picture!");
//            }
			Log.i(TAG, "BaseUiListener:doComplete()  onAuthPassed--" + values.toString());
			String accessToken;
			try {
				accessToken = values.getString("access_token");
				String expiresIn = values.getString("expires_in");
				String openID = values.getString("openid");
				String clientIp = getClientIp();
				PreferenceUtil.getInstance(mContext).saveString(
						ShareUtil.PREF_TX_ACCESS_TOKEN, accessToken);
				PreferenceUtil.getInstance(mContext).saveString(
						ShareUtil.PREF_TX_EXPIRES_TIME,
						String.valueOf(System.currentTimeMillis()
								+ Integer.parseInt(expiresIn)));
				Log.i(TAG, "expiresTime = " + String.valueOf(System.currentTimeMillis()+ Integer.parseInt(expiresIn)));
				PreferenceUtil.getInstance(mContext).saveString(ShareUtil.PREF_TX_OPEN_ID, openID);
				tencentTO.setAccessToken(accessToken);
				tencentTO.setAppkey(ShareUtil.QQ_API_ID);
				tencentTO.setClientIp(clientIp);
				tencentTO.setOpenId(openID);
				Log.i(TAG, "BaseUiListener:doComplete()    clientIp = " + clientIp);
				getUserInfo(listener);
			} catch (JSONException e) {
				e.printStackTrace();
			}
			// getUserInfo(listener);
		}

		@Override
		public void onError(UiError e) {
			Log.i(TAG, "BaseUiListener:onError()    code:" + e.errorCode + ", msg:" + e.errorMessage+ ", detail:" + e.errorDetail);
		}

		@Override
		public void onCancel() {
		    Log.i(TAG, "BaseUiListener:onCancel()");
		}
	}

	/**
	 * 获得客户端IP
	 * 
	 * @return
	 */
	public static String getClientIp() {
		try {
			for (Enumeration<NetworkInterface> mEnumeration = NetworkInterface
					.getNetworkInterfaces(); mEnumeration.hasMoreElements();) {
				NetworkInterface intf = mEnumeration.nextElement();
				for (Enumeration<InetAddress> enumIPAddr = intf
						.getInetAddresses(); enumIPAddr.hasMoreElements();) {
					InetAddress inetAddress = enumIPAddr.nextElement();
					// 如果不是回环地址
					if (!inetAddress.isLoopbackAddress()) {
						// 直接返回本地IP地址
						return inetAddress.getHostAddress().toString();
					}
				}
			}
		} catch (SocketException ex) {
			Log.e("Error", ex.toString());
		}
		return null;
	}

	/**
	 * 获得用户信息
	 * 
	 * @param l
	 */
	private void getUserInfo(final WeiboListener l) {
		weiboAPI = new TencentWeiboAPI(tencentTO);
		weiboAPI.getUserInfo(new AjaxCallBack<String>() {
			/*@Override
            public void onFailure(Throwable t, int errorNo, String strMsg) {
                super.onFailure(t, errorNo, strMsg);
                Log.i(TAG, "onError = " + strMsg);
                MessageUtil.alertMessage(mContext, "获取用户信息失败。出错信息：" + strMsg);
            }*/
			/*@Override
            public void onFailure(Throwable t, String strMsg) {
                super.onFailure(t, strMsg);
                Log.i(TAG, "onError = " + strMsg);
                MessageUtil.alertMessage(mContext, "获取用户信息失败。出错信息：" + strMsg);
            }*/

            @Override
			public void onSuccess(String json) {
				super.onSuccess(json);
				Log.i(TAG, "onComplete---json = " + json);
				try {
					JSONObject object = new JSONObject(json);
					String name = object.optString("nickname"); // name : 用户帐户名
					// String nick=data.optString("nick"); // nick : 用户昵称
					Log.i(TAG, "name = " + name);
					// Log.i(TAG, "nick = " + nick);
					PreferenceUtil.getInstance(mContext).saveString(
							ShareUtil.PREF_TX_USER_NAME, name);
					if (l != null) {
						l.onResult();
					}
				} catch (JSONException e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * 发送一条微博
	 * 
	 * @param content
	 *            微博内容（若在此处@好友，需正确填写好友的微博账号，而非昵称），不超过140字
	 * @param longitude
	 *            经度，为实数，如113.421234（最多支持10位有效数字，可以填空）不是必填
	 * @param latitude
	 *            纬度，为实数，如22.354231（最多支持10位有效数字，可以填空） 不是必填
	 * @param syncflag
	 *            微博同步到空间分享标记（可选，0-同步，1-不同步，默认为0），目前仅支持oauth1.0鉴权方式 不是必填
	 * @param compatibleflag
	 *            容错标志，支持按位操作，默认为0。 0x20-微博内容长度超过140字则报错 0-以上错误做容错处理，即发表普通微博
	 *            不是必填
	 * @param listener
	 *            回调函数
	 */
	public void addWeibo(final String content, final String longitude,
			final String latitude, final int syncflag, final int compatibleflag) {
	    Log.i(TAG, "addWeibo()    content = "+content+" ; lat = "+latitude+" ; lon = "+longitude);
		weiboAPI = new TencentWeiboAPI(tencentTO);
		weiboAPI.addWeibo(content, longitude, latitude, syncflag,
				compatibleflag, new AjaxCallBack<String>() {
					/*@Override
					public void onFailure(Throwable t, int errorNo, String strMsg) {
		                super.onFailure(t, errorNo, strMsg);
						Log.i(TAG, "onError---e = " + strMsg);
						showResult(mContext.getString(R.string.weibosdk_send_failed)+strMsg);
					}*/
					/*@Override
		            public void onFailure(Throwable t, String strMsg) {
		                super.onFailure(t, strMsg);
		                Log.i(TAG, "发送一条微博onFailure()    msg = " + strMsg);
		                showResult(mContext.getString(R.string.weibosdk_send_failed)+strMsg);
		            }*/

					@Override
					public void onSuccess(String t) {
						super.onSuccess(t);
						Log.i(TAG, "发送一条微博onSuccess()    msg = " + t);
						showResult(mContext.getString(R.string.weibosdk_send_sucess));
					}
				});

	}

	/**
	 * 发表带有本地图片的微博消息
	 * @param content 微博内容
	 * @param picPath
	 * @param longitude 经度
	 * @param latitude 纬度
	 * @param syncflag 微博同步到空间分享标记（可选，0-同步，1-不同步，默认为0）
	 * @param compatibleflag 容错标志，支持按位操作，默认为0
	 */
	public void addPicWeibo(final String content, final String picPath,
			final String longitude, final String latitude, final int syncflag,
			final int compatibleflag) {
	    Log.i(TAG, "addPicWeibo()    content = "+content+" ; picPath = "+picPath+" ; lat = "+latitude+" ; lon = "+longitude);
		weiboAPI = new TencentWeiboAPI(tencentTO);
		weiboAPI.addPicWeibo(content, picPath, longitude, latitude, syncflag,
				compatibleflag, new AjaxCallBack<String>() {
					@SuppressWarnings("unused")
                    public void onFailure(Throwable t, String strMsg) {
						Log.i(TAG, "发表带有本地图片的微博消息onFailure()    msg = " + strMsg);
						showResult(mContext.getString(R.string.weibosdk_send_failed)+strMsg);
					};

					public void onSuccess(String t) {
						Log.i(TAG, "发表带有本地图片的微博消息onSuccess()    msg = " + t);
						showResult(mContext.getString(R.string.weibosdk_send_sucess));
					}
				});
	}
	
	/**
	 * 发表带网络图片的微博消息
	 * @param content 微博内容
	 * @param picUrl
	 * @param longitude 经度
	 * @param latitude 纬度
	 * @param syncflag 微博同步到空间分享标记（可选，0-同步，1-不同步，默认为0）
	 * @param compatibleflag 容错标志，支持按位操作，默认为0
	 */
	/*public void addPicUrlWeibo(final String content, final String picUrl,
	                     final String longitude, final String latitude, final int syncflag,
	                     final int compatibleflag) {
	    Log.i(TAG, "addPicWeibo()    content = "+content+" ; picUrl = "+picUrl+" ; lat = "+latitude+" ; lon = "+longitude);
	    weiboAPI = new TencentWeiboAPI(tencentTO);
	    weiboAPI.addPicUrl(content, picUrl, longitude, latitude, syncflag,
	        compatibleflag, new AjaxCallBack<String>() {
	        public void onFailure(Throwable t, String strMsg) {
	            Log.i(TAG, "发表带网络图片的微博消息onFailure()    msg = " + strMsg);
	            showResult(mContext.getString(R.string.weibosdk_send_failed)+strMsg);
	        };
	        
	        public void onSuccess(String t) {
	            Log.i(TAG, "发表带网络图片的微博消息onSuccess()    msg = " + t);
	            showResult(mContext.getString(R.string.weibosdk_send_sucess));
	        }
	    });
	}*/
	
	private void showResult(final String msg) {
		mHandler.post(new Runnable() {

			@Override
			public void run() {
				MessageUtil.alertMessage(mContext, msg);
			}
		});
	}

	/**
	 * 注销授权
	 * 
	 * @param l
	 */
	public void logout(WeiboListener l) {
		PreferenceUtil.getInstance(mContext).remove(
				ShareUtil.PREF_TX_ACCESS_TOKEN);
		l.onResult();
	}

}
