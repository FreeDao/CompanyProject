package com.hiibox.houseshelter.wxapi;

import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;

import com.hiibox.houseshelter.BaseActivity;
import com.hiibox.houseshelter.R;
import com.hiibox.houseshelter.core.ActivityManager;
import com.hiibox.houseshelter.util.LogUtil;
import com.hiibox.houseshelter.util.ShareUtil;
import com.tencent.mm.sdk.openapi.BaseReq;
import com.tencent.mm.sdk.openapi.BaseResp;
import com.tencent.mm.sdk.openapi.ConstantsAPI;
import com.tencent.mm.sdk.openapi.IWXAPI;
import com.tencent.mm.sdk.openapi.IWXAPIEventHandler;
import com.tencent.mm.sdk.openapi.WXAPIFactory;

/**
 * @Description
 * @author ganhx
 * @version 创建时间：2013-6-9 下午4:26:45
 * 
 */
public class WXEntryActivity extends BaseActivity implements IWXAPIEventHandler{
	
	// IWXAPI 是第三方app和微信通信的openapi接口
    private IWXAPI api;
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
       // setContentView(R.layout.entry);
        
        // 通过WXAPIFactory工厂，获取IWXAPI的实例
    	api = WXAPIFactory.createWXAPI(this, ShareUtil.WECHAT_API_ID, false);
    	//api.registerApp(ShareUtil.QQ_WEIXIN_API_ID);
        api.handleIntent(getIntent(), this);
    }

	@Override
	protected void onNewIntent(Intent intent) {
		super.onNewIntent(intent);
		setIntent(intent);
        api.handleIntent(intent, this);
	}

	// 微信发送请求到第三方应用时，会回调到该方法
	@Override
	public void onReq(BaseReq req) {
		switch (req.getType()) {
		case ConstantsAPI.COMMAND_GETMESSAGE_FROM_WX:
			LogUtil.log("bluebox", "COMMAND_GETMESSAGE_FROM_WX");
			//goToGetMsg();		
			break;
		case ConstantsAPI.COMMAND_SHOWMESSAGE_FROM_WX:
			LogUtil.log("bluebox", "COMMAND_SHOWMESSAGE_FROM_WX");
			//goToShowMsg((ShowMessageFromWX.Req) req);
			break;
		default:
			LogUtil.log("bluebox", "COMMAND_else ");
			break;
		}
	}

	// 第三方应用发送到微信的请求处理后的响应结果，会回调到该方法
	@Override
	public void onResp(BaseResp resp) {
		int result = 0;
		LogUtil.log("bluebox", "result="+resp.errCode);
		switch (resp.errCode) {
		case BaseResp.ErrCode.ERR_OK:
			result = R.string.errcode_success;
			break;
		case BaseResp.ErrCode.ERR_USER_CANCEL:
			result = R.string.errcode_cancel;
			break;
		case BaseResp.ErrCode.ERR_AUTH_DENIED:
			result = R.string.errcode_deny;
			break;
		default:
			result = R.string.errcode_unknown;
			break;
		}
		ActivityManager.getScreenManager().exitActivity(mActivity);
		Toast.makeText(this, result, Toast.LENGTH_LONG).show();
	}
}